{"version":3,"file":"static/js/653.88ec00a8.chunk.js","mappings":"gvFAWMA,EAAQC,EAAQ,MAsJtB,EApJqB,WAAO,IAAD,IAChBC,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAA+BE,EAAAA,EAAAA,YAA/B,eAAMC,EAAN,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA6BJ,EAAAA,EAAAA,YAA7B,eAAMK,EAAN,KAAeC,EAAf,KACA,GAA6BN,EAAAA,EAAAA,YAA7B,eAAMO,EAAN,KAAeC,EAAf,KACA,GAA+BR,EAAAA,EAAAA,YAA/B,eAAMS,EAAN,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACNC,IAAE,cAAcC,QAAQ,CAAEC,UAAW,GAAK,QAE1C,IAAMC,EAAS,yCAAG,mGACRC,IAAAA,IAAU,iBACfC,MAAK,SAAAC,GACFhB,EAAYgB,EAASC,KAAKC,MAAK,SAACC,GAC5B,OAAOA,EAAIvB,GAAK,IAAMwB,MAAqBC,UAAUF,EAAIG,OAAOC,QAAQ,eAAgB,IAAIA,QAAQ,OAAQ,KAAKC,gBAAkB5B,CACtI,IACJ,IACA6B,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,IATa,UAWdhB,IAAE,iBAAiBmB,OACnBnB,IAAE,iBAAiBoB,OAAO,QAZZ,KAcd7B,EAAS8B,SAASC,SAAS,UAdb,qCAc+BlB,IAAAA,IAAU,0BACtDC,MAAK,SAAAC,GACFF,IAAAA,KAAW,gBAAiB,CACxBmB,SAAUjB,EAASC,KACnBrB,GAAIA,EAAGsC,MAAM,KAAK,KAErBnB,MAAK,SAAAC,GACFZ,EAAWY,EAASC,KACvB,IACAQ,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,GACJ,IACAD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,IA7Ba,eA+BdzB,EAAS8B,SAASC,SAAS,UA/Bb,uCA+B+BlB,IAAAA,IAAU,0BACtDC,MAAK,SAAAC,GACFF,IAAAA,KAAW,cAAe,CACtBmB,SAAUjB,EAASC,KACnBrB,GAAIA,EAAGsC,MAAM,KAAK,KAErBT,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,GACJ,IACAD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,IA3Ca,gBA6CdzB,EAAS8B,SAASC,SAAS,UA7Cb,uCA6C+BlB,IAAAA,IAAU,0BACtDC,MAAK,SAAAC,GACFF,IAAAA,KAAW,iBAAkB,CACzBmB,SAAUjB,EAASC,KACnBrB,GAAIA,EAAGsC,MAAM,KAAK,KAErBnB,MAAK,SAAAC,GACFR,EAAYQ,EAASC,KACxB,IACAQ,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,GACJ,IACAD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,IA5Da,4CAAH,qDA+Dfb,GACH,GAAE,CAACjB,KAEJa,EAAAA,EAAAA,YAAU,WACNH,EACIH,IAAwB,IAAbA,IAA8B,IAAZA,GAAoB,gBAAKmB,MAAM,mDAAWa,QAASC,EAAMC,UAAU,UAAUC,IAAKC,KAAc,gBAAKjB,MAAM,mDAAWe,UAAU,QAAQC,IAAKE,IAEjL,GAAE,CAACrC,IAEJ,IAAMiC,EAAI,yCAAG,WAAOK,GAAP,sFACH3B,IAAAA,IAAU,0BACfC,MAAK,SAAAC,GACFF,IAAAA,KAAW,aAAc,CACrBmB,SAAUjB,EAASC,KACnBrB,GAAIA,IAEP6B,OAAM,SAAAC,GACH,GAAGA,EAAK,MAAMA,CACjB,GACJ,IACAD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,IAbQ,OAeTpB,GAAW,gBAAK+B,UAAU,QAAQC,IAAKE,KACvC9B,IAAE,mBAAmBgC,MAAMhC,IAAE,UAAUiC,MAAQ,GAhBtC,2CAAH,sDAiCV,OACI,iBAAKN,UAAU,eAAf,WACI,UAACO,EAAA,EAAD,YACI,2BAAQ7C,GAAYA,EAASuB,MAAQ,2BACrC,iBAAMuB,KAAK,cAAcC,QAAS/C,GAAYA,EAASgD,oBACvD,iBAAMF,KAAK,WAAWC,QAAS/C,GAAYA,EAASiD,oBAExD,8BACI,gBAAKX,UAAU,YAAf,UACI,gBAAKA,UAAU,WAAf,UACI,gCACI,eAAIA,UAAU,WAAd,SAA0BtC,GAAYA,EAASuB,SAC/C,iBAAKe,UAAU,eAAf,WACI,yBACI,eAAIA,UAAU,WAAd,SAA0BtC,GAAYA,EAASkD,cAEnD,iBAAMZ,UAAU,OAAhB,SAAwBtC,GA9BpD,SAAqBmD,GACjB,IAAIC,EAAO,IAAIC,KAAKF,GAMpB,OALUG,OAAOF,EAAKG,WAAWC,OAAS,EAAI,IAAMF,OAAOF,EAAKG,WAAaD,OAAOF,EAAKG,YAK5E,KAJDD,OAAOF,EAAKK,YAAYD,OAAS,EAAI,IAAMF,OAAOF,EAAKK,WAAa,GAAKH,OAAOF,EAAKK,WAAa,IAKpG,IAJCL,EAAKM,cAKP,OAJGJ,OAAOF,EAAKO,YAAYH,OAAS,EAAI,IAAMF,OAAOF,EAAKO,YAAcL,OAAOF,EAAKO,aAKnF,KAJIL,OAAOF,EAAKQ,cAAcJ,OAAS,EAAI,IAAMF,OAAOF,EAAKQ,cAAgBN,OAAOF,EAAKQ,cAMpG,CAkB6DC,CAAY7D,EAASoD,YAE7D,gBAAKvD,GAAG,UAAU0C,IAAKvC,GAAYA,EAAS8D,IAAKC,IAAI,aACrD,iBAAKzB,UAAU,WAAf,WACI,wBAAG,4BAAStC,GAAYA,EAASgD,qBAChChD,GAAYL,EAAMK,EAAS+C,aAEhC,iBAAKT,UAAU,QAAf,WAAuB,kBAAMf,MAAM,yDAAYe,UAAU,QAAlC,0BAA8C9B,GAAYA,KAAjF,IAAmGF,EAAnG,KAA4G,iBAAMiB,MAAM,mDAAWe,UAAU,UAAjC,SAA4CtC,IAAY,UAAAA,EAASgE,aAAT,eAAgB7B,MAAM,KAAKqB,QAAS,EAAhD,UAAoDxD,EAASgE,aAA7D,aAAoD,EAAgB7B,MAAM,KAAKqB,OAAS,oBAO3Q,C","sources":["components/Main/ExtendedNews/ExtendedNews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './ExtendedNews.css';\r\nimport axios from 'axios';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport Helmet from 'react-helmet';\r\nimport cyrillicToTranslit from 'cyrillic-to-translit-js';\r\n\r\nimport unliked from '../../../assets/ico/unliked.png';\r\nimport liked from '../../../assets/ico/liked.png';\r\n\r\nconst parse = require('html-react-parser');\r\n\r\nconst ExtendedNews = () => {\r\n    const {id} = useParams();\r\n    const[selected, setSelected] = useState();\r\n    const location = useLocation();\r\n    const[isLiked, setIsLiked] = useState();\r\n    const[likeBtn, setLikeBtn] = useState();\r\n    const[isViewed, setIsViewed] = useState();\r\n\r\n    useEffect(() => {\r\n        $(\"html, body\").animate({ scrollTop: 0 }, \"fast\");\r\n\r\n        const fetchData = async () => {\r\n            await axios.get('/news/allNews')\r\n            .then(response => {\r\n                setSelected(response.data.find((obj) => {\r\n                    return obj.id + '-' + cyrillicToTranslit().transform(obj.title).replace(/[^a-zA-Z\\s]/g, '').replace(/\\s+/g, '-').toLowerCase() === id;\r\n                }));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    \r\n            $('.extendedNews').hide();\r\n            $('.extendedNews').fadeIn('slow');\r\n\r\n            location.pathname.includes('/read') && await axios.get('https://api.ipify.org/')\r\n            .then(response => {\r\n                axios.post('/like/checkIP', {\r\n                    clientIP: response.data,\r\n                    id: id.split('-')[0]\r\n                })\r\n                .then(response => {\r\n                    setIsLiked(response.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n            location.pathname.includes('/read') && await axios.get('https://api.ipify.org/')\r\n            .then(response => {\r\n                axios.post('/views/post', {\r\n                    clientIP: response.data,\r\n                    id: id.split('-')[0]\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n            location.pathname.includes('/read') && await axios.get('https://api.ipify.org/')\r\n            .then(response => {\r\n                axios.post('/views/checkIP', {\r\n                    clientIP: response.data,\r\n                    id: id.split('-')[0]\r\n                })\r\n                .then(response => {\r\n                    setIsViewed(response.data);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n        \r\n        fetchData();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        setLikeBtn(\r\n            isLiked && isLiked === -1 || isLiked === false ? <img title='–ù—Ä–∞–≤–∏—Ç—Å—è' onClick={like} className='unliked' src={unliked} /> : <img title='–ù—Ä–∞–≤–∏—Ç—Å—è' className='liked' src={liked} />\r\n        );\r\n    }, [isLiked]);\r\n\r\n    const like = async (e) => {\r\n        await axios.get('https://api.ipify.org/')\r\n        .then(response => {\r\n            axios.post('/like/post', {\r\n                clientIP: response.data,\r\n                id: id\r\n            })\r\n            .catch(err => {\r\n                if(err) throw err;\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n        setLikeBtn(<img className='liked' src={liked} />);\r\n        $('.likes .likeNum').html(+$('.likes').val() + 1);\r\n    }\r\n    \r\n    function convertDate(str) { // convert date & time\r\n        let date = new Date(str);\r\n        let day = String(date.getDate()).length < 2 ? '0' + String(date.getDate()) : String(date.getDate());\r\n        let month = String(date.getMonth()).length < 2 ? '0' + String(date.getMonth() + 1) : String(date.getMonth() + 1);\r\n        let year = date.getFullYear();\r\n        let hours = String(date.getHours()).length < 2 ? '0' + String(date.getHours()) : String(date.getHours());\r\n        let minutes = String(date.getMinutes()).length < 2 ? '0' + String(date.getMinutes()) : String(date.getMinutes());\r\n        return day + '-' +\r\n          month + '-' +\r\n          year + ' | ' +\r\n          hours + ':' +\r\n          minutes;\r\n      }\r\n\r\n    return (\r\n        <div className='extendedNews'>\r\n            <Helmet>\r\n                <title>{selected && selected.title + ' - Legendary Football'}</title>\r\n                <meta name=\"description\" content={selected && selected.meta_description} />\r\n                <meta name=\"keywords\" content={selected && selected.meta_keywords} />\r\n            </Helmet>\r\n            <section>\r\n                <div className=\"container\">\r\n                    <div className=\"postWrap\">\r\n                        <article>\r\n                            <h1 className=\"pageName\">{selected && selected.title}</h1>\r\n                            <div className=\"dateCategory\">\r\n                                <ul>\r\n                                    <li className='category'>{selected && selected.category}</li>\r\n                                </ul>\r\n                                <span className=\"date\">{selected && convertDate(selected.date)}</span>\r\n                            </div>\r\n                            <img id='mainImg' src={selected && selected.img} alt=\"newsImg\" />\r\n                            <div className='textWrap'>\r\n                                <p><strong>{selected && selected.meta_description}</strong></p>\r\n                                {selected && parse(selected.content)}\r\n                            </div>\r\n                            <div className=\"likes\"><span title='–ü—Ä–æ—Å–º–æ—Ç—Ä—ã' className='views'>üëÅ {isViewed && isViewed}</span> {likeBtn} <span title='–ù—Ä–∞–≤–∏—Ç—Å—è' className='likeNum'>{selected && selected.likes?.split(',').length > 0 ? selected.likes?.split(',').length : '0'}</span></div>\r\n                        </article>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExtendedNews;"],"names":["parse","require","id","useParams","useState","selected","setSelected","location","useLocation","isLiked","setIsLiked","likeBtn","setLikeBtn","isViewed","setIsViewed","useEffect","$","animate","scrollTop","fetchData","axios","then","response","data","find","obj","cyrillicToTranslit","transform","title","replace","toLowerCase","catch","err","console","log","hide","fadeIn","pathname","includes","clientIP","split","onClick","like","className","src","unliked","liked","e","html","val","Helmet","name","content","meta_description","meta_keywords","category","str","date","Date","String","getDate","length","getMonth","getFullYear","getHours","getMinutes","convertDate","img","alt","likes"],"sourceRoot":""}